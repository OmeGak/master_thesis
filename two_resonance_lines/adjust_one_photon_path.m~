function [photon_path,scattering_x] = adjust_one_photon_path(photon_path,one_photon_path,scattering_x,phot)


        if length(one_photon_path) < size(photon_path,1)
            one_photon_path = [one_photon_path; nan*ones(size(photon_path,1) - length(one_photon_path),1)];
        elseif length(one_photon_path) > size(photon_path,1)
            % vul dat ding aan
            photon_path = [photon_path; nan*ones(length(one_photon_path) - size(photon_path,1) , size(photon_path,2))];
        end
        photon_path = [photon_path, one_photon_path]; 
        
        one_scattering_x = [];
        K = min(find(isnan(one_photon_path)))-2)/4;
        if phot == 1
            display(K)
        end
        for k=0:K
            one_scattering_x = [one_scattering_x; one_photon_path(6+k*4)];
        end
        
        if length(one_scattering_x) < size(scattering_x,1)
            one_scattering_x = [one_scattering_x; nan*ones(size(scattering_x,1) - length(one_scattering_x),1)];
        elseif length(one_scattering_x) > size(scattering_x,1)
            % vul dat ding aan
            scattering_x = [scattering_x; nan*ones(length(one_scattering_x) - size(scattering_x,1) , size(scattering_x,2))];
        end
        scattering_x = [scattering_x, one_scattering_x]; 
        
end